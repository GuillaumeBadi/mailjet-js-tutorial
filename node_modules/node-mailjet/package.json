{
  "name": "node-mailjet",
  "version": "1.0.3",
  "description": "Mailjet NodeJS API client",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "qs": "^4.0.0",
    "request": "^2.61.0",
    "chai": "^3.2.0"
  },
  "devDependencies": {
    "mocha": "^2.2.5"
  },
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mailjet/mailjet-apiv3-nodejs.git"
  },
  "keywords": [
    "email",
    "node",
    "mail",
    "mailjet"
  ],
  "author": {
    "name": "Guillaume Badi",
    "email": "gbadi@mailjet.com",
    "url": "https://github.com/GuillaumeBadi"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mailjet/mailjet-apiv3-nodejs/issues"
  },
  "homepage": "https://github.com/mailjet/mailjet-apiv3-nodejs#readme",
  "readme": "\n[mailjet]: http://www.mailjet.com\n[api_credential]: https://app.mailjet.com/account/api_keys\n[eventemitter]: https://nodejs.org/api/events.html\n[doc]: http://dev.mailjet.com/\n\n![alt text](http://cdn.appstorm.net/web.appstorm.net/files/2012/02/mailjet_logo_200x200.png \"Mailjet\")\n\n# Mailjet NodeJs Wrapper\n\nSay Welcome to the new [Mailjet][mailjet] official NodeJS API wrapper!\n\n[Mailjet][mailjet] is an Email Service Provider (ESP)!\nGo visit the website and get confortable!\n\nFor more details, see the full [API Documentation][doc]\n\n## Getting started\n\nfirst, create a project folder\n\n`mkdir mailjet-project && cd $_`\n\n### Installation\n\n\nif you want to get a global installation, you can add `-g`\n\n`npm install node-mailjet`\n\n\n\n### Show me the code\n\nTo authenticate, go get your API key, and API secret [here][api_credential],\nopen your favorite text editor and import the mailjet module\n\n``` javascript\n\nvar Mailjet = require('node-mailjet').connect('api key', 'api secret');\n\n```\n\n### Get cosy with Mailjet\n\n\n#### Save your `API_KEY` and `API_SECRET`:\n\n`echo 'export MJ_APIKEY_PUBLIC=MY_API_KEY' >> ~/.zshrc`\n\n`echo 'export MJ_APIKEY_PRIVATE=MY_API_SECRET' >> ~/.zshrc`\n\n`source ~/.zshrc`\n\nreplace `zshrc` with `bash_profile` if you are simply using bash\n\n#### And use it in your projects\n\n``` javascript\n\nvar apiKey = process.env.MJ_APIKEY_PUBLIC,\n\tapiSecret = process.env.MJ_APIKEY_PRIVATE;\n\n```\n\n### Store a Mailjet resource\n\n``` javascript\n\n// GET resource\nvar user = Mailjet.get('user');\n\n// POST resource\nvar sender = Mailjet.post('sender');\n\n```\n\n### Request your resource with a callback function\n\n``` javascript\n\nuser.request(function (error, response, body) {\n\tif (error)\n\t\tconsole.log ('Oops, something went wrong ' + response.statusCode);\n\telse\n\t\tconsole.log (body);\n});\n\n```\n\n### Make the same request with a Promise\n\nthe request method actually returns a [EventEmitter][eventemitter] triggering `success` and `error`\n\n``` javascript\n\nuser.request()\n\t.on('error', function (error, response) {})\n\t.on('success', function (response, body) {});\n\n```\n\n### Pass data to your requests\n\n\n``` javascript\n\nsender.request({ Email: 'mr@mailjet.com' })\n\t.on('success', handleData)\n\t.on('error', handleError);\n\n```\n\n### Pass parameters as well as a callback\n\n``` javascript\n\nvar getContacts = Mailjet.get('contact');\n\ngetContacts.request({Limit: 3}, handleContacts);\n\n```\n\n### Request a resource with an ID\n\n``` javascript\n\ngetContacts.id(2).request(handleSingleContact);\n\n````\n\n### Request a ressource with an Action\n\n``` javascript\n\nvar postContact = Mailjet.post('contact');\n\npostContact.action('managemanycontacts').request({\n\tContactLists: MyContactListsArrqy,\n    Contacts: MyContactsArrqy,\n}, handlePostResponse);\n\n```\n\n### Send an Email\n\n``` javascript\n\nvar sendEmail = Mailjet.post('send');\n\nvar emailData = {\n    'FromEmail': 'my@email.com',\n    'FromName': 'My Name',\n    'Subject': 'Test with the NodeJS Mailjet wrapper',\n    'Text-part': 'Hello NodeJs !',\n    'Recipients': [{'Email': 'roger@smith.com'}],\n}\n\nsendEmail\n\t.request(emailData)\n    .on('success', handlePostResponse)\n    .on('error', hqndleError);\n\n```\n\n### Send two Emails\n\n``` javascript\n\nvar emailData = {\n    'FromEmail': 'gbadi@student.42.fr',\n    'FromName': 'Guillaume badi',\n    'Subject': 'Coucou Mailjet2',\n    'Text-part': 'Hello World2',\n    'Recipients': [{'Email': 'gbadi@mailjet.com'}],\n}\n\nvar emailData2 = emailData;\nemailData2['Text-part'] = 'This is another Email';\n\nsendEmail\n\t.request(emailData)\n    .on('success', handleData)\n    .on('error', handleError);\n\nsendEmail\n\t.request(emailData2)\n    .on('success', handleData)\n    .on('error', handleError);\n\n```\n\n## Contribute\n\nMailjet loves developpers. You can be part of this project!\n\nThis wrapper is a great introduction to the open source world, check out the code!\n\nFeel free to ask anything, and contribute:\n\n- Fork the project.\n- Create a new branch.\n- Implement your feature or bug fix.\n- Add documentation to it.\n- Commit, push, open a pull request and voila.\n\nTODO:\n\n- Add compatibility with `duplicatefrom` filter\n",
  "readmeFilename": "README.md",
  "gitHead": "72a23c17d5bc3700d7faf40c719c128009f27ba3",
  "_id": "node-mailjet@1.0.3",
  "_shasum": "cf6f44ee6c7dae2925adb830d7c9d6788695cfd3",
  "_from": "node-mailjet@*"
}
